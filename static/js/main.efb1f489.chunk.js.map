{"version":3,"sources":["constants.js","components/youtube_video/YouTubeVideo.js","components/video_gallery/VideoGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Channels","gura","id","calli","kiara","ina","ame","irys","Keywords","YouTubeVideo","thumbnails","this","props","obj","high","url","medium","default","title","className","src","imageUrl","alt","width","height","React","Component","VideoGallery","state","videos","channelId","process","channelKey","a","storedDataString","localStorage","getItem","JSON","parse","fetchVideo","requestUrl","getRequestUrl","fetch","then","resp","json","data","items","map","item","videoId","snippet","description","publishedAt","moment","setItem","stringify","channelKeys","Object","keys","Promise","all","key","getVideo","dataArr","preprocessVideos","flatMap","filterVideos","sortVideos","setState","console","log","sort","b","diff","filter","video","some","keyword","toLowerCase","includes","getAllVideos","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAEaA,EAAW,CACpBC,KAAM,CACFC,GAAI,4BAERC,MAAO,CACHD,GAAI,4BAERE,MAAO,CACHF,GAAI,4BAERG,IAAK,CACDH,GAAI,4BAERI,IAAK,CACDJ,GAAI,4BAERK,KAAM,CACFL,GAAI,6BAICM,EAAW,CACpB,OACA,OACA,SACA,SACA,KACA,WACA,QACA,W,+BCVWC,E,4JAjBX,WAAgB,IAAD,MACLC,EAAaC,KAAKC,MAAMC,IAAIH,WAClC,OAAO,UAAAA,EAAWI,YAAX,eAAiBC,OAAjB,UAAwBL,EAAWM,cAAnC,aAAwB,EAAmBD,OAA3C,UAAkDL,EAAWO,eAA7D,aAAkD,EAAoBF,O,iBAGjF,WACI,OAAOJ,KAAKC,MAAMC,IAAIK,Q,oBAG1B,WACI,OAAQ,sBAAKC,UAAU,kBAAf,UACJ,qBAAKA,UAAU,QAAQC,IAAKT,KAAKU,SAAUC,IAAKX,KAAKO,MAAOK,MAAM,MAAMC,OAAO,QAC/E,qBAAKL,UAAU,QAAf,SAAwBR,KAAKO,e,GAbdO,IAAMC,WCgGlBC,G,wDA1FX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CAAEC,OAAQ,IAFR,E,iDAKnB,SAAcC,GACV,MAAM,oDAAN,OFfeC,0CEef,sBAAgFD,EAAhF,kDATY,O,6DAYhB,WAAeE,GAAf,eAAAC,EAAA,2DACUC,EAAmBC,aAAaC,QAAQJ,KACD,cAArBE,EAF5B,yCAGeG,KAAKC,MAAMJ,IAH1B,uBAKiBvB,KAAK4B,WAAWP,GALjC,wF,sHAQA,WAAiBA,GAAjB,mBAAAC,EAAA,6DACUH,EAAY9B,EAASgC,GAAY9B,GACjCsC,EAAa7B,KAAK8B,cAAcX,GAF1C,SAGuBY,MAAMF,GACpBG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAMC,aAAV,aAAI,EAAaC,KAAI,SAAAC,GAC3B,MAAO,CACHC,QAASD,EAAK/C,GAAGgD,QACjBxC,WAAYuC,EAAKE,QAAQzC,WACzBQ,MAAO+B,EAAKE,QAAQjC,MACpBkC,YAAaH,EAAKE,QAAQC,YAC1BC,YAAaC,IAAOL,EAAKE,QAAQE,oBAXjD,cAGUP,EAHV,OAcIX,aAAaoB,QAAQvB,EAAYK,KAAKmB,UAAUV,IAdpD,kBAeWA,GAfX,gD,iFAkBA,WAAgB,IAAD,OACLW,EAAcC,OAAOC,KAAK3D,GAChC4D,QAAQC,IAAIJ,EAAYT,KAAI,SAAAc,GAAG,OAAI,EAAKC,SAASD,OAAOnB,MAAK,SAAAqB,GACzD,IAAMnC,EACF,EAAKoC,iBAAiBD,EAAQE,SAAQ,SAAApB,GAClC,OAAKA,EAGE,EAAKqB,aAAarB,GAFd,OAInB,EAAKsB,WAAWvC,GAChB,EAAKwC,SAAS,CAAExC,WAChByC,QAAQC,IAAI1C,Q,wBAIpB,SAAWA,GACPA,EAAO2C,MAAK,SAACvC,EAAGwC,GAAJ,OAAUA,EAAEpB,YAAYqB,KAAKzC,EAAEoB,kB,0BAI/C,SAAaxB,GACT,OAAOA,EAAO8C,QAAO,SAAAC,GAAK,OACtBA,EAAM1B,SAAW1C,EAASqE,MAAK,SAAAC,GAAO,OAClCF,EAAM1D,MAAM6D,cAAcC,SAASF,EAAQC,gBAC3CH,EAAMxB,YAAY2B,cAAcC,SAASF,EAAQC,uB,8BAI7D,SAAiBlD,GACb,OAAOA,EAAOmB,KAAI,SAAA4B,GACd,OAAO,2BACAA,GADP,IAEIvB,YAAaC,IAAOsB,EAAMvB,oB,+BAKtC,WACI1C,KAAKsE,iB,oBAGT,WACI,OACI,qBAAK9D,UAAU,gBAAf,SAEQR,KAAKiB,MAAMC,OAAOmB,KAAI,SAAA4B,GAAK,OACvB,cAAC,EAAD,CAAc/D,IAAK+D,a,GAnFhBnD,IAAMC,YCGlBwD,MARf,WACE,OACE,qBAAK/D,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.efb1f489.chunk.js","sourcesContent":["export const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const Channels = {\n    gura: {\n        id: \"UCoSrY_IQQVpmIRZ9Xf-y93g\"\n    },\n    calli: {\n        id: \"UCL_qhgtOy0dy1Agp8vkySQg\"\n    },\n    kiara: {\n        id: \"UCHsx4Hqa-1ORjQTh9TYDhww\"\n    },\n    ina: {\n        id: \"UCMwGHR0BTZuLsmjY_NT5Pwg\"\n    },\n    ame: {\n        id: \"UCyl1z3jo3XHR1riLFKG5UAg\"\n    },\n    irys: {\n        id: \"UC8rcEBzJSleTkf_-agPM20g\"\n    }\n};\n\nexport const Keywords = [\n    \"song\",\n    \"sing\",\n    \"歌\",\n    \"曲\",\n    \"MV\",\n    \"original\",\n    \"cover\",\n    \"karaoke\"\n];","import React from 'react';\nimport './YouTubeVideo.scss';\n\nclass YouTubeVideo extends React.Component {\n    get imageUrl() {\n        const thumbnails = this.props.obj.thumbnails;\n        return thumbnails.high?.url || thumbnails.medium?.url || thumbnails.default?.url;\n    }\n\n    get title() {\n        return this.props.obj.title;\n    }\n\n    render() {\n        return (<div className=\"video-container\">\n            <img className=\"video\" src={this.imageUrl} alt={this.title} width=\"500\" height=\"600\"></img>\n            <div className=\"title\">{this.title}</div>\n        </div>);\n    }\n}\n\nexport default YouTubeVideo;","import React from 'react';\nimport { API_KEY, Channels, Keywords } from '../../constants';\nimport moment from 'moment'\nimport YouTubeVideo from '../youtube_video/YouTubeVideo'\nimport './VideoGallery.scss';\n\nconst MAX_RESULTS = 100;\n\nclass VideoGallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { videos: [] };\n    }\n\n    getRequestUrl(channelId) {\n        return `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&channelId=${channelId}&part=snippet,id&order=date&maxResults=${MAX_RESULTS}`;\n    }\n\n    async getVideo(channelKey) {\n        const storedDataString = localStorage.getItem(channelKey);\n        if (storedDataString && storedDataString !== 'undefined') {\n            return JSON.parse(storedDataString);\n        }\n        return await this.fetchVideo(channelKey);\n    }\n\n    async fetchVideo(channelKey) {\n        const channelId = Channels[channelKey].id;\n        const requestUrl = this.getRequestUrl(channelId);\n        const data = await fetch(requestUrl)\n            .then(resp => resp.json())\n            .then(data => data?.items?.map(item => {\n                return {\n                    videoId: item.id.videoId,\n                    thumbnails: item.snippet.thumbnails,\n                    title: item.snippet.title,\n                    description: item.snippet.description,\n                    publishedAt: moment(item.snippet.publishedAt)\n                };\n            }));\n        localStorage.setItem(channelKey, JSON.stringify(data));\n        return data;\n    }\n\n    getAllVideos() {\n        const channelKeys = Object.keys(Channels);\n        Promise.all(channelKeys.map(key => this.getVideo(key))).then(dataArr => {\n            const videos =\n                this.preprocessVideos(dataArr.flatMap(data => {\n                    if (!data) {\n                        return [];\n                    }\n                    return this.filterVideos(data);\n                }));\n            this.sortVideos(videos);\n            this.setState({ videos });\n            console.log(videos);\n        });\n    }\n\n    sortVideos(videos) {\n        videos.sort((a, b) => b.publishedAt.diff(a.publishedAt));\n    }\n\n    // checks videoId exists and title/description match the keywords\n    filterVideos(videos) {\n        return videos.filter(video =>\n            video.videoId && Keywords.some(keyword =>\n                video.title.toLowerCase().includes(keyword.toLowerCase()) ||\n                video.description.toLowerCase().includes(keyword.toLowerCase())));\n    }\n\n    // preprocessed videos, publishedAt might not be a moment object after retrieving\n    preprocessVideos(videos) {\n        return videos.map(video => {\n            return {\n                ...video,\n                publishedAt: moment(video.publishedAt)\n            };\n        })\n    }\n\n    componentDidMount() {\n        this.getAllVideos();\n    }\n\n    render() {\n        return (\n            <div className=\"video-wrapper\">\n                {\n                    this.state.videos.map(video =>\n                        <YouTubeVideo obj={video}></YouTubeVideo>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default VideoGallery;","import './App.css';\nimport VideoGallery from './components/video_gallery/VideoGallery';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VideoGallery></VideoGallery>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}