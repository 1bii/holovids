{"version":3,"sources":["logo.svg","constants.js","components/video_gallery/VideoGallery.js","App.js","reportWebVitals.js","index.js"],"names":["Channels","gura","id","calli","kiara","ina","ame","irys","cookies","Cookies","VideoGallery","props","setState","videos","channelId","process","channelKey","a","get","this","fetchVideo","requestUrl","getRequestUrl","fetch","then","resp","json","data","set","getVideo","console","log","sort","b","publishedAt","diff","getAllVideos","React","Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,G,MAAA,IAA0B,kC,4DCE5BA,EAAW,CACpBC,KAAM,CACFC,GAAI,4BAERC,MAAO,CACHD,GAAI,4BAERE,MAAO,CACHF,GAAI,4BAERG,IAAK,CACDH,GAAI,4BAERI,IAAK,CACDJ,GAAI,4BAERK,KAAM,CACFL,GAAI,6B,uBCbNM,EAAU,IAAIC,IA+DLC,E,kDA5DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,SAAS,CACVC,OAAQ,KAHG,E,iDAOnB,SAAcC,GACV,MAAM,oDAAN,ODjBeC,0CCiBf,sBAAgFD,EAAhF,kDAZY,O,6DAehB,WAAeE,GAAf,SAAAC,EAAA,8DACWT,EAAQU,IAAIF,GADvB,qCAC4CG,KAAKC,WAAWJ,GAD5D,yG,sHAIA,WAAiBA,GAAjB,mBAAAC,EAAA,6DACUH,EAAYd,EAASgB,GAAYd,GACjCmB,EAAaF,KAAKG,cAAcR,GAF1C,SAGuBS,MAAMF,GAAYG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAH3D,cAGUC,EAHV,OAIInB,EAAQoB,IAAIZ,EAAYW,GAJ5B,kBAKWA,GALX,gD,iFAQA,WAqBIR,KAAKU,SApBc,QAoBOL,MAAK,SAAAG,GAAI,OAAIG,QAAQC,IAAIJ,Q,wBAGvD,SAAWd,GACPA,EAAOmB,MAAK,SAACf,EAAGgB,GAAJ,OAAUhB,EAAEiB,YAAYC,KAAKF,EAAEC,kB,+BAG/C,WACIf,KAAKiB,iB,oBAGT,WACI,OAAQ,yD,GAzDWC,IAAMC,WCkBlBC,MAtBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.700bc84f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const Channels = {\n    gura: {\n        id: \"UCoSrY_IQQVpmIRZ9Xf-y93g\"\n    },\n    calli: {\n        id: \"UCL_qhgtOy0dy1Agp8vkySQg\"\n    },\n    kiara: {\n        id: \"UCHsx4Hqa-1ORjQTh9TYDhww\"\n    },\n    ina: {\n        id: \"UCMwGHR0BTZuLsmjY_NT5Pwg\"\n    },\n    ame: {\n        id: \"UCyl1z3jo3XHR1riLFKG5UAg\"\n    },\n    irys: {\n        id: \"UC8rcEBzJSleTkf_-agPM20g\"\n    }\n};\n\nexport const Keywords = [\n    \"song\",\n    \"sing\",\n    \"歌\",\n    \"曲\",\n    \"MV\",\n    \"original\",\n    \"cover\"\n];","import React from 'react';\nimport { API_KEY, Channels } from '../../constants';\nimport moment from 'moment'\nimport Cookies from 'universal-cookie';\n\nconst MAX_RESULTS = 100;\nconst cookies = new Cookies();\n\nclass VideoGallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setState({\n            videos: [],\n        });\n    }\n\n    getRequestUrl(channelId) {\n        return `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&channelId=${channelId}&part=snippet,id&order=date&maxResults=${MAX_RESULTS}`;\n    }\n\n    async getVideo(channelKey) {\n        return cookies.get(channelKey) || await this.fetchVideo(channelKey);\n    }\n\n    async fetchVideo(channelKey) {\n        const channelId = Channels[channelKey].id;\n        const requestUrl = this.getRequestUrl(channelId);\n        const data = await fetch(requestUrl).then(resp => resp.json());\n        cookies.set(channelKey, data);\n        return data;\n    }\n\n    getAllVideos() {\n        const channelKey = 'gura';\n        // const urls = Object.values(Channels).map(channel => this.getRequestUrl(channel.id)).slice(0, 1);\n        // Promise.all(urls.map(url =>\n        //     fetch(url).then(resp => resp.json())\n        // )).then(dataArr => {\n        //     // const videos = dataArr.flatMap(data => data?.items?.map(item => {\n        //     //     return {\n        //     //         videoId: item.id.videoId,\n        //     //         thumbnails: item.snippet.thumbnails,\n        //     //         title: item.snippet.title,\n        //     //         publishedAt: moment(item.snippet.publishedAt)\n        //     //     };\n        //     // }) || []);\n        //     // // this.sortVideos(videos);\n        //     // this.setState({\n        //     //     videos\n        //     // });\n        //     // console.log(this.state.videos);\n        //     console.log(dataArr);\n        // })\n        this.getVideo(channelKey).then(data => console.log(data));\n    }\n\n    sortVideos(videos) {\n        videos.sort((a, b) => a.publishedAt.diff(b.publishedAt));\n    }\n\n    componentDidMount() {\n        this.getAllVideos();\n    }\n\n    render() {\n        return (<div>test video gallery</div>)\n    }\n}\n\nexport default VideoGallery;","import logo from './logo.svg';\nimport './App.css';\nimport VideoGallery from './components/video_gallery/VideoGallery';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VideoGallery></VideoGallery>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}